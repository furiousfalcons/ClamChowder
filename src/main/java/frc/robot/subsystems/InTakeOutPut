package frc.robot.subsystems;

import com.revrobotics.CANSparkLowLevel.MotorType;
import com.revrobotics.CANSparkMax;
import com.revrobotics.ColorSensorV3;

import edu.wpi.first.networktables.NetworkTable;
import edu.wpi.first.networktables.NetworkTableInstance;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.I2C;
import edu.wpi.first.wpilibj.motorcontrol.Spark;
import edu.wpi.first.wpilibj.util.Color;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import frc.robot.Constants;

public class InTakeOutPut extends SubsystemBase {
    private NetworkTable tableInTakeOutPut = NetworkTableInstance.getDefault().getTable("InTakeOutPut");
    private SparkMax intakeOutPutMotor; 
    private ColorSensorV3 colorSensor;
    private long time;
    private boolean isInTaking;
    private boolean isOutPutting;
    private I2C.Port i2cPort;
    int proximity;

    public InTakeOutPut() {
        i2cPort = I2C.Port.kOnboard;
        colorSensor = new ColorSensorV3(i2cPort);
        //work on the next line(WIP)
        intakeOutMotor = new SparkMax() = null; 
        time = System.currentTimeMillis();

    }

    @Override
    public void periodic() {
        proximity = colorSensor.getProximity();
    }

    public void intake() {
        isInTaking = true;
        intakeOutPutMotor.set( Constants.intakeMotorSpeed);
        tableInTakeOutPut.getEntry("InTake").setBoolean(true);
    }

 }

 public void OutPut() {
    if (isInTaking){
        isOutPutting = true;
        intakeOutPutMotor.set(-Constants.OutputMotorSpeed);
        tableInTakeOutPut.getEntry("Output").setBoolean(true);
    }
 }

 public void stop() {
    isOutputing = false;
    isIntaking = false;
    intakeOutPutMotor.set(0.0);
    tableInTakeOutPut.getEntry("OutPut").setBoolean(false);
    tableInTakeOutPut.getEntry("InTake").setBoolean(false);
 }

 public boolean isCurrentlyInTaking()
 {
    return isInTaking;
 }
 public boolean isCurrentlyOutPuting()
 {
    return isOutPutting;
 }